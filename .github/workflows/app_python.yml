name: app_python

on: [push]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('app_python/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          pip install -r app_python/requirements.test.txt -r app_python/requirements.txt
      - name: Python lint
        if: always()
        run: |
          pylint app_python
      - name: Markdown lint
        if: always()
        uses: actionshub/markdownlint@main
      - name: Dockerfile lint
        if: always()
        uses: hadolint/hadolint-action@v1.5.0
        with:
          dockerfile: 'app_python/Dockerfile'
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('app_python/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          pip install -r app_python/requirements.test.txt -r app_python/requirements.txt
      - name: test
        run: |
          pytest
  build:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          docker-compose pull
          docker-compose build
